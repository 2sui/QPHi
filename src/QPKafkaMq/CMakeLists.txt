# cmake version
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
# project name
PROJECT(qpKafkaMq)

# libs output path
SET(BUILD_LIBS  ${PROJECT_SOURCE_DIR}/../../build/libs)
# exec output path
SET(BUILD_BIN  ${PROJECT_SOURCE_DIR}/../../build/bin)
# deps dir
SET(DEPS_QP_CORE  ../qpCore)
SET(DEPS_QP_HTTP_PARSE  ../qpHttpParse)

# sources dir
AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}  SRC_ROOT)
AUX_SOURCE_DIRECTORY(${DEPS_QP_CORE}  DEP_QP_CORE)
AUX_SOURCE_DIRECTORY(${DEPS_QP_CORE}/qp_tiny_stack  DEP_QP_CORE_QP_TINY_STACK)
AUX_SOURCE_DIRECTORY(${DEPS_QP_HTTP_PARSE} DEP_QP_HTTP_PARSE)
# headers dir
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}  ${DEPS_QP_CORE} ${DEPS_QP_HTTP_PARSE})

# set libs output path
SET(LIBRARY_OUTPUT_PATH  ${BUILD_LIBS})
# set exec output path
SET(EXECUTABLE_OUTPUT_PATH  ${BUILD_BIN})

# add flag or definitions
ADD_DEFINITIONS(-W -Wall -DDEVELOP -D_REENTRANT -g
     -D_FILE_OFFSET_BITS=64 -std=c++11 -DQP_DEBUG)

# lib target
# .so
#ADD_LIBRARY(output_shared  SHARED  ${SRC_ROOT} 
#     ${DEP_QP_CORE} 
#     ${DEP_QP_CORE_QP_TINY_STACK}
#     ${DEP_QP_HTTP_PARSE})
#TARGET_LINK_LIBRARIES(output_shared  pthread dl rt z rdkafka)
#SET_TARGET_PROPERTIES(output_shared PROPERTIES OUTPUT_NAME ${PROJECT_NAME})
#SET_TARGET_PROPERTIES(output_shared PROPERTIES CLEAN_DIRECT_OUTPUT 1)
#.a
#ADD_LIBRARY(output_static  STATIC  ${SRC_ROOT} 
#     ${DEP_QP_CORE} 
#     ${DEP_QP_CORE_QP_TINY_STACK}
#     ${DEP_QP_HTTP_PARSE})
#TARGET_LINK_LIBRARIES(output_static  pthread dl rt z rdkafka)
#SET_TARGET_PROPERTIES(output_static PROPERTIES OUTPUT_NAME ${PROJECT_NAME})
#SET_TARGET_PROPERTIES(output_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)

#INSTALL(FILES ${BUILD_LIBS}/lib${PROJECT_NAME}.a ${BUILD_LIBS}/lib${PROJECT_NAME}.so
#        DESTINATION lib)
#INSTALL(FILES ${PROJECT_SOURCE_DIR}/qp_kafkamq.h
#        DESTINATION include)

# exec target
ADD_EXECUTABLE(${PROJECT_NAME}  ${SRC_ROOT} 
     ${DEP_QP_CORE} 
     ${DEP_QP_CORE_QP_TINY_STACK}
     ${DEP_QP_HTTP_PARSE})
TARGET_LINK_LIBRARIES(${PROJECT_NAME}  pthread dl rt z rdkafka)
